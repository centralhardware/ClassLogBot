name: Build and Publish Docker images with Jib

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read
  packages: write

jobs:
  # Определяем какие модули изменились
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      common: ${{ steps.filter.outputs.common }}
      web: ${{ steps.filter.outputs.web }}
      bot: ${{ steps.filter.outputs.bot }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            common:
              - 'common/**'
              - 'build.gradle.kts'
              - 'settings.gradle.kts'
              - 'gradle/**'
            web:
              - 'web/**'
              - 'common/**'
              - 'build.gradle.kts'
              - 'settings.gradle.kts'
              - 'gradle/**'
            bot:
              - 'bot/**'
              - 'common/**'
              - 'build.gradle.kts'
              - 'settings.gradle.kts'
              - 'gradle/**'

  # Сборка и публикация веб-модуля
  build-web:
    needs: changes
    if: |
      github.event_name == 'push' &&
      (needs.changes.outputs.web == 'true' || needs.changes.outputs.common == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Compute image name and tags
        id: meta
        shell: bash
        run: |
          REPO_LOWER="${GITHUB_REPOSITORY,,}"
          BASE_IMAGE="ghcr.io/${REPO_LOWER}"
          echo "image=$BASE_IMAGE" >> "$GITHUB_OUTPUT"

          # Теги (без двоеточия, только имена тегов)
          TAGS=("web-latest" "web-sha-${GITHUB_SHA::7}")

          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAGS+=("web-$GITHUB_REF_NAME")
          fi

          (IFS=,; echo "tags=${TAGS[*]}") >> "$GITHUB_OUTPUT"

      - name: Build and push web image with Jib
        env:
          JIB_TO_IMAGE: ${{ steps.meta.outputs.image }}
          JIB_TO_TAGS:  ${{ steps.meta.outputs.tags }}
          JIB_TO_AUTH_USERNAME: ${{ github.actor }}
          JIB_TO_AUTH_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew --no-daemon \
            -Djib.to.image="$JIB_TO_IMAGE" \
            -Djib.to.tags="$JIB_TO_TAGS" \
            -Djib.to.auth.username="$JIB_TO_AUTH_USERNAME" \
            -Djib.to.auth.password="$JIB_TO_AUTH_PASSWORD" \
            :web:jib

      - name: Trigger Coolify deployment for web
        env:
          COOLIFY_WEB_DEPLOY_HOOK_URL: ${{ secrets.COOLIFY_WEB_DEPLOY_HOOK_URL }}
          COOLIFY_WEB_DEPLOY_BEARER_TOKEN: ${{ secrets.COOLIFY_DEPLOY_BEARER_TOKEN }}
        shell: bash
        run: |
          if [[ -z "$COOLIFY_WEB_DEPLOY_HOOK_URL" ]]; then
            echo "Coolify web deploy hook URL is not set. Skip Coolify deploy. Provide secrets.COOLIFY_WEB_DEPLOY_HOOK_URL to enable."
            exit 0
          fi
          echo "Triggering Coolify web deployment via webhook..."
          AUTH_HEADER=()
          if [[ -n "$COOLIFY_WEB_DEPLOY_BEARER_TOKEN" ]]; then
            echo "Using Bearer authorization for Coolify trigger."
            AUTH_HEADER=(-H "Authorization: Bearer $COOLIFY_WEB_DEPLOY_BEARER_TOKEN")
          fi
          http_code=$(curl -fsS -o /tmp/coolify_resp.txt -w "%{http_code}" -X POST "${AUTH_HEADER[@]}" "$COOLIFY_WEB_DEPLOY_HOOK_URL") || true
          echo "Coolify response (HTTP $http_code):"
          cat /tmp/coolify_resp.txt || true
          if [[ "$http_code" -ge 200 && "$http_code" -lt 300 ]]; then
            echo "Coolify web deploy trigger succeeded."
            exit 0
          else
            echo "Coolify web deploy trigger failed with HTTP $http_code" >&2
            exit 1
          fi

  # Сборка и публикация бот-модуля
  build-bot:
    needs: changes
    if: |
      github.event_name == 'push' &&
      (needs.changes.outputs.bot == 'true' || needs.changes.outputs.common == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Compute image name and tags
        id: meta
        shell: bash
        run: |
          REPO_LOWER="${GITHUB_REPOSITORY,,}"
          BASE_IMAGE="ghcr.io/${REPO_LOWER}"
          echo "image=$BASE_IMAGE" >> "$GITHUB_OUTPUT"

          # Теги (без двоеточия, только имена тегов)
          TAGS=("bot-latest" "bot-sha-${GITHUB_SHA::7}")

          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            TAGS+=("bot-$GITHUB_REF_NAME")
          fi

          (IFS=,; echo "tags=${TAGS[*]}") >> "$GITHUB_OUTPUT"

      - name: Build and push bot image with Jib
        env:
          JIB_TO_IMAGE: ${{ steps.meta.outputs.image }}
          JIB_TO_TAGS:  ${{ steps.meta.outputs.tags }}
          JIB_TO_AUTH_USERNAME: ${{ github.actor }}
          JIB_TO_AUTH_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew --no-daemon \
            -Djib.to.image="$JIB_TO_IMAGE" \
            -Djib.to.tags="$JIB_TO_TAGS" \
            -Djib.to.auth.username="$JIB_TO_AUTH_USERNAME" \
            -Djib.to.auth.password="$JIB_TO_AUTH_PASSWORD" \
            :bot:jib

      - name: Trigger Coolify deployment for bot
        env:
          COOLIFY_BOT_DEPLOY_HOOK_URL: ${{ secrets.COOLIFY_BOT_DEPLOY_HOOK_URL }}
          COOLIFY_BOT_DEPLOY_BEARER_TOKEN: ${{ secrets.COOLIFY_DEPLOY_BEARER_TOKEN }}
        shell: bash
        run: |
          if [[ -z "$COOLIFY_BOT_DEPLOY_HOOK_URL" ]]; then
            echo "Coolify bot deploy hook URL is not set. Skip Coolify deploy. Provide secrets.COOLIFY_BOT_DEPLOY_HOOK_URL to enable."
            exit 0
          fi
          echo "Triggering Coolify bot deployment via webhook..."
          AUTH_HEADER=()
          if [[ -n "$COOLIFY_BOT_DEPLOY_BEARER_TOKEN" ]]; then
            echo "Using Bearer authorization for Coolify trigger."
            AUTH_HEADER=(-H "Authorization: Bearer $COOLIFY_BOT_DEPLOY_BEARER_TOKEN")
          fi
          http_code=$(curl -fsS -o /tmp/coolify_resp.txt -w "%{http_code}" -X POST "${AUTH_HEADER[@]}" "$COOLIFY_BOT_DEPLOY_HOOK_URL") || true
          echo "Coolify response (HTTP $http_code):"
          cat /tmp/coolify_resp.txt || true
          if [[ "$http_code" -ge 200 && "$http_code" -lt 300 ]]; then
            echo "Coolify bot deploy trigger succeeded."
            exit 0
          else
            echo "Coolify bot deploy trigger failed with HTTP $http_code" >&2
            exit 1
          fi

  # PR билды - проверяем что всё компилируется
  build-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '24'
          cache: gradle

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build all modules on PRs (no push)
        run: ./gradlew --no-daemon build -x test
